/*{
	"author": "Frad LEE",
	"targets": ["omnifocus"],
	"type": "action",
	"identifier": "me.frad.omnifocus.complete-and-await-reply",
	"version": "0.2",
	"description": "Mark the currently selected task as complete and add a new task to await the reply.",
	"label": "Complete and Await Reply",
	"mediumLabel": "Complete and Await Reply",
	"paletteLabel": "Complete and Await Reply",
}*/
;(() => {
  let action = new PlugIn.Action(function (selection) {
    // Waiting tag
    waitingTagName = 'Waiting'

    // Location tag
    locationTagName = 'Location'
    homeTagName = 'at Home'
    companyTagName = 'at Company'

    // Current time
    today = new Date()
    date =
      today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate()
    time =
      today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds()
    dateTime = date + ' ' + time

    // Prefix of name
    prefixOfName = 'Reply on: '

    let duplicatedTasks = new Array()
    selection.tasks.forEach(function (task) {
      insertionLocation = task.after
      if (insertionLocation === null) {
        insertionLocation = inbox.ending
      }
      dupTasks = duplicateTasks([task], insertionLocation)

      // Process name
      /**
       * 目前的问题：
       * - 只处理第一个任务
       * - 无论操作是否完成都会复制任务并且把原本的标记成完成
       */
      if (task.name.startsWith('买')) {
        inputForm = new Form()

        popupMenu = new Form.Field.Option(
          'menuItem',
          'Location',
          [1, 2],
          ['Home', 'Company'],
          1
        )

        inputForm.addField(popupMenu)

        formPrompt = 'Where will the item you bought ship?'
        buttonTitle = 'OK'

        formPromise = inputForm.show(formPrompt, buttonTitle)

        formPromise.then(function (formObject) {
          menuItem = formObject.values['menuItem']
          switch (menuItem) {
            case 1:
              updateDupTask(task, dupTasks, '家', homeTagName)
              break
            case 2:
              updateDupTask(task, dupTasks, '公司', companyTagName)
              break
          }
        })

        formPromise.catch(function (err) {
          console.log('form cancelled', err.message)
        })
      } else if (!task.name.startsWith(prefixOfName)) {
        targetName = prefixOfName + task.name
        dupTasks[0].addTag(tagNamed(waitingTagName))

        dupTasks[0].clearTags()
        dupTasks[0].name = targetName
      } else {
        reg = new RegExp(prefixOfName, '')
        targetName = prefixOfName + task.name.replace(reg, '')

        dupTasks[0].clearTags()
        dupTasks[0].addTag(tagNamed(waitingTagName))
        dupTasks[0].name = targetName
      }

      // Process note
      targetNote = task.note + '\n------\nReply at: ' + dateTime
      dupTasks[0].note = targetNote

      dupTasks[0].addTag(tagNamed(waitingTagName))
      if (dupTasks[0].hasChildren) {
        dupTasks[0].flattenedChildren.forEach(function (task) {
          deleteObject(task)
        })
      }

      duplicatedTasks.push(dupTasks[0].id.primaryKey)

      task.markComplete()
    })
    idStr = duplicatedTasks.join(',')
    URL.fromString('omnifocus:///task/' + idStr).open()
  })

  action.validate = function (selection) {
    return selection.tasks.length >= 1
  }

  function updateDupTask(task, dupTasks, locationName, locationTag) {
    reg = new RegExp('买', '')

    targetName = task.name.replace(reg, '') + '快递到' + locationName

    dupTasks[0].clearTags()
    dupTasks[0].addTag(tagNamed(waitingTagName))
    dupTasks[0].addTag(tagNamed(locationTagName).tagNamed(locationTag))
    dupTasks[0].name = targetName
  }

  return action
})()
